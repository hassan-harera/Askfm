-- MySQL Script generated by MySQL Workbench
-- Fri Apr 24 17:40:24 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Askfm
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Askfm
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Askfm` DEFAULT CHARACTER SET utf8 ;
USE `Askfm` ;

-- -----------------------------------------------------
-- Table `Askfm`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`users` (
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NULL,
  `security_answer` VARCHAR(500) NULL,
  `num_of_posts` INT NULL,
  `num_of_followings` INT NULL,
  `num_of_loves` INT NULL,
  `bio` VARCHAR(1500) NULL,
  `profile_picture` BLOB NULL,
  `can_anon` TINYINT NULL,
  `sex` VARCHAR(10) NULL,
  `num_of_followers` INT NULL,
  `name` VARCHAR(60) NULL,
  `birthdate` DATE NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Askfm`.`questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`questions` (
  `q_id` INT NOT NULL AUTO_INCREMENT,
  `q_date` DATE NULL,
  `q_from_username` VARCHAR(45) NULL,
  `q_to_username` VARCHAR(45) NULL,
  `q_content` VARCHAR(300) NULL,
  `q_related_id` INT NULL,
  PRIMARY KEY (`q_id`),
  CONSTRAINT `username_question_user`
    FOREIGN KEY (`q_from_username` , `q_to_username`)
    REFERENCES `Askfm`.`users` (`username` , `username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `username_question_user_idx` ON `Askfm`.`questions` (`q_from_username` ASC, `q_to_username` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Askfm`.`answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`answers` (
  `a_id` INT NOT NULL AUTO_INCREMENT,
  `a_date` DATE NULL,
  `a_from_username` VARCHAR(45) NULL,
  `a_content` VARCHAR(300) NULL,
  `a_to_q_id` INT NULL,
  `number_of_likes` INT NULL,
  PRIMARY KEY (`a_id`),
  CONSTRAINT `answer_to_question`
    FOREIGN KEY (`a_to_q_id`)
    REFERENCES `Askfm`.`questions` (`q_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username_answer_user`
    FOREIGN KEY (`a_from_username`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `answer_to_question_idx` ON `Askfm`.`answers` (`a_to_q_id` ASC) VISIBLE;

CREATE INDEX `username_answer_user_idx` ON `Askfm`.`answers` (`a_from_username` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Askfm`.`post_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`post_likes` (
  `post_id` INT NULL,
  `post_from_username` VARCHAR(45) NULL,
  `like_date` DATE NULL,
  CONSTRAINT `answer_id_post_likes`
    FOREIGN KEY (`post_id`)
    REFERENCES `Askfm`.`answers` (`a_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `like_username_user`
    FOREIGN KEY (`post_from_username`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `answer_id_post_likes_idx` ON `Askfm`.`post_likes` (`post_id` ASC) VISIBLE;

CREATE INDEX `like_username_user_idx` ON `Askfm`.`post_likes` (`post_from_username` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Askfm`.`notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`notification` (
  `n_id` INT NOT NULL AUTO_INCREMENT,
  `n_date` DATE NULL,
  `n_content` VARCHAR(800) NULL,
  `n_to_username` VARCHAR(45) NULL,
  PRIMARY KEY (`n_id`),
  CONSTRAINT `username_notification`
    FOREIGN KEY (`n_to_username`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `username_notification_idx` ON `Askfm`.`notification` (`n_to_username` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Askfm`.`followings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`followings` (
  `username_f` VARCHAR(45) NULL,
  `f_username` VARCHAR(45) NULL,
  `f_date` DATE NULL,
  CONSTRAINT `username_follower`
    FOREIGN KEY (`username_f`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username_following`
    FOREIGN KEY (`f_username`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `username_follower_idx` ON `Askfm`.`followings` (`username_f` ASC) VISIBLE;

CREATE INDEX `username_following_idx` ON `Askfm`.`followings` (`f_username` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `Askfm`.`new_posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Askfm`.`new_posts` (
  `post_to_username` VARCHAR(45) NULL,
  `post_date` DATE NULL,
  `post_id` INT NULL,
  `post_from_username` VARCHAR(45) NULL,
  CONSTRAINT `post_id`
    FOREIGN KEY (`post_id`)
    REFERENCES `Askfm`.`answers` (`a_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username_post`
    FOREIGN KEY (`post_to_username`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `post_username_from`
    FOREIGN KEY (`post_from_username`)
    REFERENCES `Askfm`.`users` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `post_id_idx` ON `Askfm`.`new_posts` (`post_id` ASC) VISIBLE;

CREATE INDEX `username_post_idx` ON `Askfm`.`new_posts` (`post_to_username` ASC) VISIBLE;

CREATE INDEX `post_username_from_idx` ON `Askfm`.`new_posts` (`post_from_username` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
